###########
#dein.toml#
###########

#パッケージ管理ツール
[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
'''

#カラースキーム
[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
  colorscheme onedark
'''

#色々と補完
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  call deoplete#enable()
  " No display of the number of competion list
  set shortmess+=c
  " <TAB>: completion.
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ deoplete#manual_complete()
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('')[col - 1]  =~ '\s'
  endfunction
  " <S-TAB>: completion back.
  inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
  " <C-e>: popup cancel
  inoremap <expr><C-e>       deoplete#cancel_popup()
  call deoplete#custom#source('_', 'matchers', ['matcher_head'])
  call deoplete#custom#source('_', 'converters', [
        \ 'converter_remove_paren',
        \ 'converter_remove_overlap',
        \ 'matcher_length',
        \ 'converter_truncate_abbr',
        \ 'converter_truncate_menu',
        \ 'converter_auto_delimiter',
        \ ])
  call deoplete#custom#option('keyword_patterns', {
        \ '_': '[a-zA-Z_]\k*\(?',
        \ 'tex': '[^\w|\s][a-zA-Z_]\w*',
        \ })
  call deoplete#custom#option('camel_case', v:true)
'''

#エラー表示(lintちゃんがあれば自動でやってくれる)
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_sign_column_always = 1
  " let g:ale_open_list = 1
  let g:ale_keep_list_window_open = 1
'''

#インデントを強調表示(スペース民用)
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
'''

#C/C++用の拡張ハイライト
[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'

#パワーライン。
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
   \ 'colorscheme': 'one',
   \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
   \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" },
   \ 'active': {
   \   'left': [ [ 'mode', 'paste' ],
   \             [ 'readonly', 'filename', 'modified' ],
   \             [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ] ]
   \ },
   \ 'component_function': {
   \   'readonly': 'LightlineReadonly',
   \   'filename': 'LightlineFilename',
   \ },
   \}
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'zchee/deoplete-jedi'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

#lightlineにaleのエラー情報を表示するためのツール
[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']
hook_add = '''
let g:lightline.component_expand = {
   \  'linter_checking': 'lightline#ale#checking',
   \  'linter_warnings': 'lightline#ale#warnings',
   \  'linter_errors': 'lightline#ale#errors',
   \  'linter_ok': 'lightline#ale#ok',
   \ }
let g:lightline.component_type = {
   \     'linter_checking': 'left',
   \     'linter_warnings': 'warning',
   \     'linter_errors': 'error',
   \     'linter_ok': 'left',
   \ }
'''
